from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command

from data.database import active_sessions, get_user_data
from config import personalities_list, voices
from keyboards.inline import personality_keyboard, voice_keyboard

router = Router()

@router.message(Command("choose"))
async def cmd_choose(message: Message):
    user_id = message.from_user.id
    if user_id not in active_sessions:
        await message.reply("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç —Å /login")
        return
    
    await message.answer(
        "üë§ –í—ã–±–µ—Ä–∏—Ç–µ –ª–∏—á–Ω–æ—Å—Ç—å:",
        reply_markup=personality_keyboard()
    )
    
    await message.answer(
        "üé§ –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å:",
        reply_markup=voice_keyboard()
    )

@router.message(Command("personalities"))
async def cmd_personalities(message: Message):
    await message.answer("üé≠ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–∏—á–Ω–æ—Å—Ç–∏:\n" + "\n".join(personalities_list))

@router.message(Command("voices"))
async def cmd_voices(message: Message):
    await message.answer("üé§ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞:\n" + "\n".join(voices))

@router.callback_query(F.data.startswith("personality_"))
async def process_personality(callback: CallbackQuery):
    personality = callback.data.split('_', 1)[1]
    user_id = callback.from_user.id
    
    if user_id in active_sessions:
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏ –≤ –ë–î
        await callback.message.edit_text(f"‚úÖ –õ–∏—á–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {personality}")
    else:
        await callback.message.edit_text("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç")
    
    await callback.answer()

@router.callback_query(F.data.startswith("voice_"))
async def process_voice(callback: CallbackQuery):
    voice = callback.data.split('_', 1)[1]
    user_id = callback.from_user.id
    
    if user_id in active_sessions:
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–æ–ª–æ—Å–∞ –≤ –ë–î
        await callback.message.edit_text(f"‚úÖ –ì–æ–ª–æ—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {voice}")
    else:
        await callback.message.edit_text("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç")
    
    await callback.answer()